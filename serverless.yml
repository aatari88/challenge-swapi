
service: challenge-swapi

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${param:tableName}

plugins:
  - serverless-offline  # Agrega el plugin aqu√≠

# functions:
#   api:
#     handler: src/handler.handler
#     events:
#       - httpApi: "*"

functions:
  createItem:
    handler: src/handler.createItemHandler
    events:
      - http:
          path: item
          method: post
  getItems:
    handler: src/handler.getItemsHandler
    events:
      - http:
          path: items
          method: get
  obtenerPersonaje:
    handler: src/handler.obtenerPersonajeHandler
    events:
      - http:
          path: api/personajes/{id}
          method: get
  buscarPersonajes:
    handler: src/handler.buscarPersonajesHandler
    events:
      - http:
          path: api/personajes
          method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
